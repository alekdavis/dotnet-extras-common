<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NameOf.Keep Method</title><meta name="Title" content="Keep" /><meta name="Help.Id" content="M:DotNetExtras.Common.NameOf.Keep(System.Object,System.Int32,System.Boolean,System.String)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="DotNetExtras.Common" /><meta name="guid" content="M_DotNetExtras_Common_NameOf_Keep" /><meta name="Description" content="Returns a shortened name of the object, class, type, or property keeping the specified number of compound prefixes or suffixes." /><meta name="tocFile" content="../toc/IDAAAB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">DotNetExtras.Common Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="PreliminaryContainer" class="level-left"><div class="level-item"><span class="tag is-warning is-medium">This is preliminary documentation and is subject to change.</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Name<wbr />Of<span id="LST9839600_0" data-languageSpecificText="cpp=::|nu=."></span>Keep Method</h1><div class="summary">
            Returns a shortened name of the object, class, type, or property
            keeping the specified number of compound prefixes or suffixes.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_DotNetExtras_Common.htm">DotNetExtras.Common</a><br /><strong>Assembly:</strong> DotNetExtras.Common (in DotNetExtras.Common.dll) Version: 1.0.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">string</span> <span class="identifier">Keep</span>(
	<span class="identifier">Object</span>? <span class="parameter">caller</span>,
	[<span class="identifier">RangeAttribute</span>(1, 2147483647)] <span class="identifier">int</span> <span class="parameter">count</span> = 1,
	<span class="identifier">bool</span> <span class="parameter">camelCase</span> = <span class="keyword">false</span>,
	<span class="identifier">string</span>? <span class="parameter">name</span> = <span class="keyword">null</span>
)</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">caller</span>  <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a></dt><dd>
            Full or partial property name (can also be referenced using <span class="code">nameof</span>).
            </dd><dt class="has-text-weight-normal"><span class="parameter">count</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a>  (Optional)</dt><dd>
            Number of parts to be included in the result.
            A positive number indicates including from the left,
            a negative number indicates including from the right.
            If the kept number is bigger than the number of parts,
            an empty string will be returned.
            </dd><dt class="has-text-weight-normal"><span class="parameter">camelCase</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a>  (Optional)</dt><dd>
            If true, parameter names will be converted to <span class="code">camelCase</span>.
            </dd><dt class="has-text-weight-normal"><span class="parameter">name</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>  (Optional)</dt><dd>
            Must be omitted.
            </dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a><br />
            Shortened name.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDGCSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">// PRINT: Class
Console.WriteLine(NameOf.Keep(nameof(Class.Parent.ChildProp), 1));

// PRINT: ChildProp
Console.WriteLine(NameOf.Keep(nameof(Class.Parent.ChildProp), -1));

// PRINT: class.parent
Console.WriteLine(NameOf.Keep(nameof(Class.Parent.ChildProp), 2, true));

// PRINT: parent.childProp
Console.WriteLine(NameOf.Keep(nameof(Class.Parent.ChildProp), -2, true));

// PRINT: object
Console.WriteLine(NameOf.Keep(object.Parent?.ChildProp), 1);

// PRINT: ChildProp
Console.WriteLine(NameOf.Keep(object.Parent?.ChildProp), -1);

// PRINT: object.parent
Console.WriteLine(NameOf.Keep(object.Parent?.ChildProp, 2, true));

// PRINT: parent.childProp
Console.WriteLine(NameOf.Keep(object.Parent?.ChildProp, -2, true));</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_DotNetExtras_Common_NameOf.htm">NameOf Class</a></div><div><a href="N_DotNetExtras_Common.htm">DotNetExtras.Common Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><a href="https://github.com/alekdavis/dotnet-extras-common" target="_blank">Project repository</a><p>Copyright © 2025 Alek Davis</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:alek.davis%40gmail.com?Subject=DotNetExtras.Common%20Library%20Documentation">Alek Davis</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>