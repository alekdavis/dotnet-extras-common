<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SafeException Class</title><meta name="Title" content="SafeException" /><meta name="Help.Id" content="T:DotNetExtras.Common.Exceptions.SafeException" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="DotNetExtras.Common.Exceptions" /><meta name="guid" content="T_DotNetExtras_Common_Exceptions_SafeException" /><meta name="Description" content="Use the class as the base exception for your custom exception classes, so you can easily recognize them in code. This can be handy in a few cases." /><meta name="tocFile" content="../toc/IDCB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">DotNetExtras.Common Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="PreliminaryContainer" class="level-left"><div class="level-item"><span class="tag is-warning is-medium">This is preliminary documentation and is subject to change.</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Safe<wbr />Exception Class</h1><div class="summary">
            Use the <span class="selflink">SafeException</span> class as the base exception for your custom exception classes,
            so you can easily recognize them in code.
            This can be handy in a few cases.
            For example, calling the <a href="M_DotNetExtras_Common_Extensions_ExceptionExtensions_GetMessages__1.htm">GetMessages<span id="LSTD37EEE72_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD37EEE72_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Exception, Boolean)</a>
            extension method passing <span class="selflink">SafeException</span> as the generic type
            (or calling the <a href="M_DotNetExtras_Common_Extensions_ExceptionExtensions_GetSafeMessages.htm">GetSafeMessages(Exception, Boolean)</a>
            extension method),
            will only return messages from your custom exceptions
            which can help you control the error details sent to the other apps
            and make sure sensitive information is not leaked outside of your application.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_DotNetExtras_Common_Exceptions.htm">DotNetExtras.Common.Exceptions</a><br /><strong>Assembly:</strong> DotNetExtras.Common (in DotNetExtras.Common.dll) Version: 1.0.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SafeException</span> : <span class="identifier">Exception</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">SafeException</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAJEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_DotNetExtras_Common_Exceptions_SafeException__ctor.htm">SafeException<span id="LSTD37EEE72_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Initializes a new instance of the <span class="selflink">SafeException</span> class.
            </td></tr><tr><td><a href="M_DotNetExtras_Common_Exceptions_SafeException__ctor_1.htm">SafeException(String)</a></td><td>
            Initializes a new instance of the <span class="selflink">SafeException</span> class.
            </td></tr><tr><td><a href="M_DotNetExtras_Common_Exceptions_SafeException__ctor_2.htm">SafeException(String, Exception)</a></td><td>
            Initializes a new instance of the <span class="selflink">SafeException</span> class.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_DotNetExtras_Common_Extensions_ObjectExtensions_Clone.htm">Clone</a></td><td>
            Returns a deep copy of an object (requires type casting).
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ObjectExtensions.htm">ObjectExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ExceptionExtensions_GetMessages.htm">GetMessages</a></td><td>
            Gets messages from the immediate and all inner exceptions.
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ExceptionExtensions.htm">ExceptionExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ExceptionExtensions_GetMessages__1.htm">GetMessages<span id="LSTD37EEE72_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTD37EEE72_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns messages from the immediate and inner exceptions
            derived from the specified type.
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ExceptionExtensions.htm">ExceptionExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ObjectExtensions_GetPropertyValue.htm">GetPropertyValue</a></td><td>
            Returns the value of the immediate or nested object property.
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ObjectExtensions.htm">ObjectExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ExceptionExtensions_GetSafeMessages.htm">GetSafeMessages</a></td><td>
            Gets messages from the immediate and all inner exceptions.
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ExceptionExtensions.htm">ExceptionExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ObjectExtensions_IsEmpty.htm">IsEmpty</a></td><td>
             Determines whether the specified object 
             has no properties or fields holding non-null values or non-empty collections.
             <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ObjectExtensions.htm">ObjectExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ObjectExtensions_IsEquivalentTo.htm">IsEquivalentTo</a></td><td>
            Checks if the source object is identical to the target (comparing all instance properties and fields). 
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ObjectExtensions.htm">ObjectExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Extensions_ObjectExtensions_SetPropertyValue.htm">SetPropertyValue</a></td><td>
            Sets the new value of an immediate or nested object property
            (creating parent properties if needed).
            <br />(Defined by <a href="T_DotNetExtras_Common_Extensions_ObjectExtensions.htm">ObjectExtensions</a>)</td></tr><tr><td><a href="M_DotNetExtras_Common_Json_JsonExtensions_ToJson.htm">ToJson</a></td><td>
            Converts an object to a JSON string.
            <br />(Defined by <a href="T_DotNetExtras_Common_Json_JsonExtensions.htm">JsonExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_DotNetExtras_Common_Exceptions.htm">DotNetExtras.Common.Exceptions Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><a href="https://github.com/alekdavis/dotnet-extras-common" target="_blank">Project repository</a><p>Copyright © 2025 Alek Davis</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:alek.davis%40gmail.com?Subject=DotNetExtras.Common%20Library%20Documentation">Alek Davis</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>